<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:property-placeholder location="classpath:transaction/jdbc.properties"/>
    <bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init"
          p:uniqueResourceName="XADBMSA"
          p:xaDataSourceClassName="${jdbc.driverClassName}"
          p:poolSize="1"
          destroy-method="close">
        <property name="xaProperties">
            <props>
                <prop key="databaseName">springproject</prop>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSourceB" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init"
          p:uniqueResourceName="XADBMSB"
          p:xaDataSourceClassName="${jdbc.driverClassName}"
          p:poolSize="1"
          destroy-method="close">
        <property name="xaProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="databaseName">forxa</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="emfBase"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          abstract="true">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="transaction"/>
        <property name="jpaProperties">
            <props>
                <!--<prop key="hibernate.transaction.coordinator_class">-->
                    <!--org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl-->
                <!--</prop>-->
                <!--<prop key="hibernate.transaction.factory_class">-->
                    <!---->
                <!--</prop>-->
                <!--<prop key="hibernate.transaction.manager_lookup_class">-->
                    <!--com.atomikos.icatch.jta.hibernate.TransactionManagerLookup-->
                <!--</prop>-->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL8Dialect</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="emfA" parent="emfBase">
        <property name="dataSource" ref="dataSourceA"/>
        <property name="persistenceUnitName" value="emfA"/>
    </bean>
    <bean id="emfB" parent="emfBase">
        <property name="dataSource" ref="dataSourceB"/>
        <property name="persistenceUnitName" value="emfB"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="atomikosTransactionManager"
          class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true"/>
    </bean>
    <bean id="atomikosUserTransaction"
          class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>
    <context:component-scan base-package="transaction" />

</beans>